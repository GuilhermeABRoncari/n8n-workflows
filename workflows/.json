{
  "data": [
    {
      "createdAt": "2025-03-31T15:57:05.203Z",
      "updatedAt": "2025-03-31T16:22:42.235Z",
      "id": "Nsus1EInuHr6r0rJ",
      "name": "TESTE",
      "active": true,
      "nodes": [
        {
          "parameters": {},
          "type": "n8n-nodes-base.manualTrigger",
          "typeVersion": 1,
          "position": [
            0,
            0
          ],
          "id": "6c6ff336-f5c8-442b-9d55-09c88656cfae",
          "name": "When clicking ‘Test workflow’"
        },
        {
          "parameters": {
            "chatId": "-1002328943452",
            "text": "TES TESTE",
            "additionalFields": {}
          },
          "type": "n8n-nodes-base.telegram",
          "typeVersion": 1.2,
          "position": [
            220,
            0
          ],
          "id": "93a994cf-0637-49f1-9475-93e89e7f929e",
          "name": "Telegram",
          "webhookId": "2c08baef-3fed-4e9d-b2f1-8874ad13711a",
          "credentials": {
            "telegramApi": {
              "id": "6SQ6pyou0IifJdK0",
              "name": "n8n-bot"
            }
          }
        }
      ],
      "connections": {
        "When clicking ‘Test workflow’": {
          "main": [
            [
              {
                "node": "Telegram",
                "type": "main",
                "index": 0
              }
            ]
          ]
        }
      },
      "settings": {
        "executionOrder": "v1"
      },
      "staticData": null,
      "meta": {
        "templateCredsSetupCompleted": true
      },
      "pinData": {},
      "versionId": "6b19c103-23c6-4217-af48-a7b308369fa3",
      "triggerCount": 0,
      "tags": []
    },
    {
      "createdAt": "2025-03-31T17:49:14.508Z",
      "updatedAt": "2025-03-31T17:49:14.508Z",
      "id": "usWWwcdGri2GqBdb",
      "name": "Workflow 1",
      "active": false,
      "nodes": [
        {
          "id": "0f5532f9-36ba-4bef-86c7-30d607400b15",
          "name": "Jira",
          "webhookId": "string",
          "disabled": true,
          "notesInFlow": true,
          "notes": "string",
          "type": "n8n-nodes-base.Jira",
          "typeVersion": 1,
          "executeOnce": false,
          "alwaysOutputData": false,
          "retryOnFail": false,
          "maxTries": 0,
          "waitBetweenTries": 0,
          "onError": "stopWorkflow",
          "position": [
            -100,
            80
          ],
          "parameters": {
            "additionalProperties": {}
          },
          "credentials": {
            "jiraSoftwareCloudApi": {
              "id": "35",
              "name": "jiraApi"
            }
          }
        }
      ],
      "connections": {
        "main": [
          {
            "node": "Jira",
            "type": "main",
            "index": 0
          }
        ]
      },
      "settings": {
        "saveExecutionProgress": true,
        "saveManualExecutions": true,
        "saveDataErrorExecution": "all",
        "saveDataSuccessExecution": "all",
        "executionTimeout": 3600,
        "errorWorkflow": "VzqKEW0ShTXA5vPj",
        "timezone": "America/New_York",
        "executionOrder": "v1"
      },
      "staticData": {
        "lastId": 1
      },
      "meta": null,
      "pinData": null,
      "versionId": "bf4c5922-c815-46cb-91a8-c3ec3bdd3f83",
      "triggerCount": 0,
      "tags": []
    },
    {
      "createdAt": "2025-03-31T17:50:12.559Z",
      "updatedAt": "2025-03-31T17:50:12.559Z",
      "id": "WUNiQBZQ3eiOS9b3",
      "name": "Workflow 1",
      "active": false,
      "nodes": [
        {
          "id": "0f5532f9-36ba-4bef-86c7-30d607400b15",
          "name": "Jira",
          "webhookId": "string",
          "disabled": true,
          "notesInFlow": true,
          "notes": "string",
          "type": "n8n-nodes-base.Jira",
          "typeVersion": 1,
          "executeOnce": false,
          "alwaysOutputData": false,
          "retryOnFail": false,
          "maxTries": 0,
          "waitBetweenTries": 0,
          "onError": "stopWorkflow",
          "position": [
            -100,
            80
          ],
          "parameters": {
            "additionalProperties": {}
          },
          "credentials": {
            "jiraSoftwareCloudApi": {
              "id": "35",
              "name": "jiraApi"
            }
          }
        }
      ],
      "connections": {
        "main": [
          {
            "node": "Jira",
            "type": "main",
            "index": 0
          }
        ]
      },
      "settings": {
        "saveExecutionProgress": true,
        "saveManualExecutions": true,
        "saveDataErrorExecution": "all",
        "saveDataSuccessExecution": "all",
        "executionTimeout": 3600,
        "errorWorkflow": "VzqKEW0ShTXA5vPj",
        "timezone": "America/New_York",
        "executionOrder": "v1"
      },
      "staticData": {
        "lastId": 1
      },
      "meta": null,
      "pinData": null,
      "versionId": "5b20bfc0-ba9e-4f9d-b51c-5fb039c2c11d",
      "triggerCount": 0,
      "tags": []
    },
    {
      "createdAt": "2025-03-31T15:48:39.243Z",
      "updatedAt": "2025-03-31T19:23:00.691Z",
      "id": "XNin9qj879ZOp2Ki",
      "name": "GitHub - Workflows",
      "active": true,
      "nodes": [
        {
          "parameters": {},
          "id": "afb893ae-dac4-4a2f-8863-9b44fafa1ae4",
          "name": "On clicking 'execute'",
          "type": "n8n-nodes-base.manualTrigger",
          "position": [
            420,
            180
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "content": "## Subworkflow",
            "height": 750.8363163824032,
            "width": 2086.845881354743,
            "color": 6
          },
          "id": "2d13bf55-f3d1-4c27-b92d-9ecd4e171dfe",
          "name": "Sticky Note",
          "type": "n8n-nodes-base.stickyNote",
          "position": [
            -20,
            560
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "resource": "__CUSTOM_API_CALL__",
            "requestOptions": {}
          },
          "id": "7fd8b048-aba2-400b-99f7-5acf0c11cfb3",
          "name": "n8n",
          "type": "n8n-nodes-base.n8n",
          "position": [
            680,
            280
          ],
          "typeVersion": 1,
          "credentials": {
            "n8nApi": {
              "id": "Hm4HTLeR1em7aemL",
              "name": "n8n account"
            }
          }
        },
        {
          "parameters": {
            "assignments": {
              "assignments": [
                {
                  "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
                  "name": "Done",
                  "type": "boolean",
                  "value": true
                }
              ]
            },
            "options": {}
          },
          "id": "b999e25b-beed-482f-bc0b-cd95049e572d",
          "name": "Return",
          "type": "n8n-nodes-base.set",
          "position": [
            1860,
            760
          ],
          "typeVersion": 3.3
        },
        {
          "parameters": {
            "url": "={{ $json.download_url }}",
            "options": {}
          },
          "id": "dc2a236c-232e-4a3c-9fe4-de6345ba1db8",
          "name": "Get File",
          "type": "n8n-nodes-base.httpRequest",
          "position": [
            960,
            640
          ],
          "typeVersion": 4.2
        },
        {
          "parameters": {
            "conditions": {
              "options": {
                "version": 1,
                "leftValue": "",
                "caseSensitive": true,
                "typeValidation": "strict"
              },
              "conditions": [
                {
                  "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
                  "operator": {
                    "type": "string",
                    "operation": "empty",
                    "singleValue": true
                  },
                  "leftValue": "={{ $json.content }}",
                  "rightValue": ""
                },
                {
                  "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
                  "operator": {
                    "type": "string",
                    "operation": "notExists",
                    "singleValue": true
                  },
                  "leftValue": "={{ $json.error }}",
                  "rightValue": ""
                }
              ],
              "combinator": "and"
            },
            "options": {}
          },
          "id": "6662219a-3588-48d6-a93b-3c4b69667018",
          "name": "If file too large",
          "type": "n8n-nodes-base.if",
          "position": [
            760,
            660
          ],
          "typeVersion": 2
        },
        {
          "parameters": {},
          "id": "61265dab-9620-4aae-90cf-29fea10f8bb0",
          "name": "Merge Items",
          "type": "n8n-nodes-base.merge",
          "position": [
            760,
            920
          ],
          "typeVersion": 2
        },
        {
          "parameters": {
            "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"
          },
          "id": "b1a41390-555b-4f85-9b8d-b37ee2a06a09",
          "name": "isDiffOrNew",
          "type": "n8n-nodes-base.code",
          "position": [
            960,
            920
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "dataType": "string",
            "value1": "={{$json.github_status}}",
            "rules": {
              "rules": [
                {
                  "value2": "same"
                },
                {
                  "value2": "different",
                  "output": 1
                },
                {
                  "value2": "new",
                  "output": 2
                }
              ]
            }
          },
          "id": "31b6bb5c-ddeb-49f6-bf37-065143b8d77f",
          "name": "Check Status",
          "type": "n8n-nodes-base.switch",
          "position": [
            1180,
            920
          ],
          "typeVersion": 1
        },
        {
          "parameters": {},
          "id": "9dbf7ee6-2bc9-4cc3-8be0-6303f7d2f739",
          "name": "Same file - Do nothing",
          "type": "n8n-nodes-base.noOp",
          "position": [
            1400,
            760
          ],
          "typeVersion": 1
        },
        {
          "parameters": {},
          "id": "03769b7b-6c40-4a6e-8ea1-7aefaca467ad",
          "name": "File is different",
          "type": "n8n-nodes-base.noOp",
          "position": [
            1400,
            920
          ],
          "typeVersion": 1
        },
        {
          "parameters": {},
          "id": "3134abf6-8ac8-4adb-8f38-0449c64519a0",
          "name": "File is new",
          "type": "n8n-nodes-base.noOp",
          "position": [
            1400,
            1080
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "resource": "file",
            "owner": {
              "__rl": true,
              "mode": "name",
              "value": "={{ $('Globals').item.json.repo.owner }}"
            },
            "repository": {
              "__rl": true,
              "mode": "name",
              "value": "={{ $('Globals').item.json.repo.name }}"
            },
            "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').json.id}}.json",
            "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
            "commitMessage": "={{$('Execute Workflow Trigger').json.name}} ({{$json.github_status}})"
          },
          "id": "fc4d71ae-b269-455d-bf67-453faa6711e3",
          "name": "Create new file",
          "type": "n8n-nodes-base.github",
          "position": [
            1620,
            1080
          ],
          "typeVersion": 1,
          "credentials": {
            "githubApi": {
              "id": "Db8dDAF5WVYzPECK",
              "name": "GitHub account"
            }
          }
        },
        {
          "parameters": {
            "resource": "file",
            "operation": "edit",
            "owner": {
              "__rl": true,
              "mode": "name",
              "value": "={{ $('Globals').item.json.repo.owner }}"
            },
            "repository": {
              "__rl": true,
              "mode": "name",
              "value": "={{ $('Globals').item.json.repo.name }}"
            },
            "filePath": "={{ $('Globals').item.json.repo.path }}*.json",
            "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
            "commitMessage": "=* ({{$json.github_status}})"
          },
          "id": "0ba395b4-810f-4f08-9617-bcb50826e770",
          "name": "Edit existing file",
          "type": "n8n-nodes-base.github",
          "position": [
            1620,
            900
          ],
          "typeVersion": 1,
          "credentials": {
            "githubApi": {
              "id": "Db8dDAF5WVYzPECK",
              "name": "GitHub account"
            }
          }
        },
        {
          "parameters": {
            "options": {}
          },
          "id": "2b4dc76b-59a3-4500-b5d0-61a99e2446e3",
          "name": "Loop Over Items",
          "type": "n8n-nodes-base.splitInBatches",
          "position": [
            880,
            280
          ],
          "typeVersion": 3
        },
        {
          "parameters": {
            "rule": {
              "interval": [
                {
                  "field": "hours",
                  "hoursInterval": 2
                }
              ]
            }
          },
          "id": "cbf3b1ce-e86c-46b2-94a0-78d64e8eb7fd",
          "name": "Schedule Trigger",
          "type": "n8n-nodes-base.scheduleTrigger",
          "position": [
            420,
            380
          ],
          "typeVersion": 1.2
        },
        {
          "parameters": {
            "content": "## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub.\n\nThe files are saved `ID.json` for the filename.\n\n### Setup\nOpen `Globals` node and update the values below 👇\n\n- **repo.owner:** your Github username\n- **repo.name:** the name of your repository\n- **repo.path:** the folder to use within the repository. If it doesn't exist it will be created.\n\n\nIf your username was `john-doe` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\n- repo.owner - john-doe\n- repo.name - n8n-backups\n- repo.path - workflows/\n\n\nThe workflow calls itself using a subworkflow, to help reduce memory usage.",
            "height": 600.88409546716,
            "width": 371.1995072042308,
            "color": 4
          },
          "id": "88be8a61-e396-4cb7-9379-0118af60f4c7",
          "name": "Sticky Note1",
          "type": "n8n-nodes-base.stickyNote",
          "position": [
            -20,
            -80
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "content": "## Main workflow loop",
            "height": 434.88564057365943,
            "width": 886.4410237965205,
            "color": 7
          },
          "id": "8b4d5a9f-b3b8-4236-ac14-18dd332407fe",
          "name": "Sticky Note2",
          "type": "n8n-nodes-base.stickyNote",
          "position": [
            380,
            100
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "resource": "file",
            "operation": "get",
            "owner": {
              "__rl": true,
              "mode": "name",
              "value": "={{ $json.repo.owner }}"
            },
            "repository": {
              "__rl": true,
              "mode": "name",
              "value": "={{ $json.repo.name }}"
            },
            "filePath": "={{ $json.repo.path }}{{ $('Execute Workflow Trigger') }}.json",
            "asBinaryProperty": false,
            "additionalParameters": {}
          },
          "id": "e04c3a20-b98f-4e32-a664-cfd77f604c6a",
          "name": "Get file data",
          "type": "n8n-nodes-base.github",
          "position": [
            560,
            660
          ],
          "typeVersion": 1,
          "alwaysOutputData": true,
          "credentials": {
            "githubApi": {
              "id": "Db8dDAF5WVYzPECK",
              "name": "GitHub account"
            }
          },
          "continueOnFail": true
        },
        {
          "parameters": {
            "assignments": {
              "assignments": [
                {
                  "id": "6cf546c5-5737-4dbd-851b-17d68e0a3780",
                  "name": "repo.owner",
                  "type": "string",
                  "value": "GuilhermeABRoncari"
                },
                {
                  "id": "452efa28-2dc6-4ea3-a7a2-c35d100d0382",
                  "name": "repo.name",
                  "type": "string",
                  "value": "n8n-workflows"
                },
                {
                  "id": "81c4dc54-86bf-4432-a23f-22c7ea831e74",
                  "name": "repo.path",
                  "type": "string",
                  "value": "workflows/"
                }
              ]
            },
            "options": {}
          },
          "id": "e5175591-bdd0-452c-98d3-5fbcf128b423",
          "name": "Globals",
          "type": "n8n-nodes-base.set",
          "position": [
            340,
            820
          ],
          "typeVersion": 3.4
        },
        {
          "parameters": {
            "content": "## Edit this node 👇",
            "height": 80,
            "width": 150,
            "color": 4
          },
          "id": "f90d903e-370d-4514-a79b-f195fd995a54",
          "name": "Sticky Note3",
          "type": "n8n-nodes-base.stickyNote",
          "position": [
            300,
            720
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "inputSource": "passthrough"
          },
          "id": "3297491c-e588-4156-8e20-5289605a7c32",
          "name": "Execute Workflow Trigger",
          "type": "n8n-nodes-base.executeWorkflowTrigger",
          "position": [
            60,
            940
          ],
          "typeVersion": 1.1
        },
        {
          "parameters": {
            "workflowId": {
              "__rl": true,
              "mode": "id",
              "value": "={{ $workflow.id }}"
            },
            "workflowInputs": {
              "value": {},
              "schema": [],
              "mappingMode": "defineBelow",
              "matchingColumns": [],
              "attemptToConvertTypes": false,
              "convertFieldsToString": true
            },
            "mode": "each",
            "options": {}
          },
          "id": "45df26b2-98a1-4376-8c43-798da135d7cc",
          "name": "Execute Workflow",
          "type": "n8n-nodes-base.executeWorkflow",
          "position": [
            1100,
            280
          ],
          "typeVersion": 1.2
        },
        {
          "parameters": {
            "chatId": "-1002328943452",
            "text": "Workflow completo",
            "additionalFields": {}
          },
          "type": "n8n-nodes-base.telegram",
          "typeVersion": 1.2,
          "position": [
            2240,
            780
          ],
          "id": "5440554f-f32b-4fb6-9657-9af9f887cf0e",
          "name": "Telegram",
          "webhookId": "7af0c11f-ab29-430c-a6cd-681b736804b3",
          "credentials": {
            "telegramApi": {
              "id": "6SQ6pyou0IifJdK0",
              "name": "n8n-bot"
            }
          }
        }
      ],
      "connections": {
        "n8n": {
          "main": [
            [
              {
                "node": "Loop Over Items",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Globals": {
          "main": [
            [
              {
                "node": "Get file data",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Get File": {
          "main": [
            [
              {
                "node": "Merge Items",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "File is new": {
          "main": [
            [
              {
                "node": "Create new file",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Merge Items": {
          "main": [
            [
              {
                "node": "isDiffOrNew",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "isDiffOrNew": {
          "main": [
            [
              {
                "node": "Check Status",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Check Status": {
          "main": [
            [
              {
                "node": "Same file - Do nothing",
                "type": "main",
                "index": 0
              }
            ],
            [
              {
                "node": "File is different",
                "type": "main",
                "index": 0
              }
            ],
            [
              {
                "node": "File is new",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Get file data": {
          "main": [
            [
              {
                "node": "If file too large",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Create new file": {
          "main": [
            [
              {
                "node": "Return",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Loop Over Items": {
          "main": [
            [],
            [
              {
                "node": "Execute Workflow",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Execute Workflow": {
          "main": [
            [
              {
                "node": "Loop Over Items",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Schedule Trigger": {
          "main": [
            [
              {
                "node": "n8n",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "File is different": {
          "main": [
            [
              {
                "node": "Edit existing file",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "If file too large": {
          "main": [
            [
              {
                "node": "Get File",
                "type": "main",
                "index": 0
              }
            ],
            [
              {
                "node": "Merge Items",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Edit existing file": {
          "main": [
            [
              {
                "node": "Return",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "On clicking 'execute'": {
          "main": [
            [
              {
                "node": "n8n",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Same file - Do nothing": {
          "main": [
            [
              {
                "node": "Return",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Execute Workflow Trigger": {
          "main": [
            [
              {
                "node": "Globals",
                "type": "main",
                "index": 0
              },
              {
                "node": "Merge Items",
                "type": "main",
                "index": 1
              }
            ]
          ]
        },
        "Return": {
          "main": [
            [
              {
                "node": "Telegram",
                "type": "main",
                "index": 0
              }
            ]
          ]
        }
      },
      "settings": {
        "executionOrder": "v1"
      },
      "staticData": {
        "node:Schedule Trigger": {
          "recurrenceRules": [
            14
          ]
        }
      },
      "meta": {
        "templateCredsSetupCompleted": true
      },
      "pinData": {},
      "versionId": "3d9f7735-e185-4d93-9f8e-1869a342f0b1",
      "triggerCount": 1,
      "tags": []
    }
  ],
  "nextCursor": null
}